Other Tools
===========
Have partially modified this approach, from copies of the source, to building from project SVN or distribution files and patching where required.

Note that these are already all Mavened up, and very useful.

- Apache Tika
- Apache PDFBox
- Apache VFS (we might consider joining the development team for this one)
- ...

I've had a bit of a look at these - they might be useful:

Mavenised projects that it would be nice to push to the main Maven repo.
- meta-extractor (http://meta-extractor.sourceforge.net/)
- Heritrix (http://crawler.archive.org/apidocs/org/archive/io/warc/WARCReader.html)
- JHOVE2
- Droid?
- FITS?

Old projects that have gone quiet but might be work restarting:
- lemur-warc (http://boston.lti.cs.cmu.edu/clueweb09/wiki/tiki-index.php?page=Working+with+WARC+Files)
- loopy ISO reader (http://sourceforge.net/projects/loopy/)
- Classifier4J (http://classifier4j.sourceforge.net/)
- JMimeMagic (http://sourceforge.net/projects/jmimemagic/)

 
JHOVE and TIFF
--------------
See http://www.asmail.be/msg0054752394.html

So, the standard says offsets must be on even-byte boundaries, but many pieces 
of software permit even byte bounds. In this case, a flag is used in the config 
to indicate if odd-bounds are considered 'valid'. This is really a policy 
statement, and perhaps belongs elsewhere. Really, we want to say that this 
TIFF nearly conforms to TIFF 6.0, or conforms to "TIFF 6.0 with odd offsets".
i.e. that JHOVE should parse as TIFF and report exceptions in a well-specified
manner, and that a separate process applies policy to that information.
